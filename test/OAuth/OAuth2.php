<?php

namespace Cradle\OAuth;

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 02:11:01.
 */
class Cradle_OAauth_OAuth2_Test extends TestCase
{
    /**
     * @var ImageHandler
     */
    protected $object;

    protected $clientId;
    protected $clientSecret;
    protected $urlRedirect;
    protected $urlRequest;
    protected $urlAccess;
    protected $urlResource;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->clientId = 'foobar_client_id';
        $this->clientSecret = 'foobar_client_secret';
        $this->urlRedirect = 'http://foobar.com/url_redirect';
        $this->urlRequest = 'http://foobar.com/url_request';
        $this->urlAccess = 'http://foobar.com/url_access';
        $this->urlResource = 'http://foobar.com/me';

        $this->object = new OAuth2(
            $this->clientId,
            $this->clientSecret,
            $this->urlRedirect,
            $this->urlRequest,
            $this->urlAccess,
            $this->urlResource,
            function($options) {
                $options['response'] = json_encode($options);
                return $options;
            }
        );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Cradle\OAuth\OAuth2::getAccessTokens
     */
    public function testGetAccessTokens()
    {   
        $code = 'foobar_code';
        $actual = $this->object->getAccessTokens($code);

        $this->assertEquals($this->urlAccess, $actual[CURLOPT_URL]);
        $this->assertContains('client_id=foobar_client_', $actual[CURLOPT_POSTFIELDS]);
        $this->assertContains('code=foobar_code', $actual[CURLOPT_POSTFIELDS]);
    }

    /**
     * @covers Cradle\OAuth\OAuth2::getLoginUrl
     */
    public function testGetLoginUrl()
    {
        $token = 'foobar_token';
        $actual = $this->object->getLoginUrl();

        $this->assertEquals(
                $this->urlRequest . '?response_type=code' .
                '&client_id=' . $this->clientId .
                '&redirect_uri=' . urlencode($this->urlRedirect) .
                '&access_type=online' .
                '&approval_prompt=auto', $actual);
    }



    /**
     * @covers Cradle\OAuth\OAuth2::get
     */
    public function testGet()
    {
        $fields = [
            'access_token' => 'foobar_access_token'
        ];
        $resource = '/resource';
        $actual = $this->object->get($resource, $fields);

        $this->assertEquals(
            $this->urlResource.$resource 
            .'?access_token='. $fields['access_token'], 
            $actual[CURLOPT_URL]
        );
    }
}
